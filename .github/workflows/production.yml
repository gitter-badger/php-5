name: Publish Docker (shinsenter/php)

################################################################################
################################################################################

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/production.yml'
      - 'src/**'
  schedule:
    - cron: "0 0 * * 0,3"

################################################################################
################################################################################

jobs:
  ##############################################################################
  # Base Ubuntu with S6 Overlay
  ##############################################################################

  base_image:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        base:
          - ubuntu
        version:
          - 20.04
          - focal
        image:
          - shinsenter/s6-ubuntu
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Restore cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Create cache path
        run: |
          mkdir -p /tmp/.buildx
          docker buildx create --use
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.buildx
          cache-to: type=local,dest=/tmp/.buildx-new,mode=max
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:src/base/"
          build-args: |
            BASE_IMAGE=${{ matrix.base }}:${{ matrix.version }}
          tags: |
            ${{ matrix.image }}:${{ matrix.version }}
            ${{ matrix.image }}:latest
      -
        name: Swap cache path
        run: |
          rm -rf /tmp/.buildx
          mv /tmp/.buildx-new /tmp/.buildx

  ##############################################################################
  # Base PHP-CLI
  ##############################################################################

  php-cli:
    needs: base_image
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        variation:
          - cli
        image:
          - shinsenter/php
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Restore cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Create cache path
        run: |
          mkdir -p /tmp/.buildx
          docker buildx create --use
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.buildx
          cache-to: type=local,dest=/tmp/.buildx-new,mode=max
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:src/php/${{ matrix.variation }}/"
          build-args: |
            BASE_IMAGE=shinsenter/s6-ubuntu:focal
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ matrix.image }}:${{ matrix.version }}-${{ matrix.variation }}
            ${{ matrix.image }}:${{ matrix.version }}
            ${{ matrix.image }}:${{ matrix.variation }}
            ${{ matrix.image }}:latest
      -
        name: Swap cache path
        run: |
          rm -rf /tmp/.buildx
          mv /tmp/.buildx-new /tmp/.buildx

  ##############################################################################
  # Base PHP-FPM
  ##############################################################################

  php-fpm:
    needs: php-cli
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        variation:
          - fpm
        image:
          - shinsenter/php
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Restore cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Create cache path
        run: |
          mkdir -p /tmp/.buildx
          docker buildx create --use
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx
          cache-to: type=local,dest=/tmp/.buildx-new,mode=max
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:src/php/${{ matrix.variation }}/"
          build-args: |
            BASE_IMAGE=${{ matrix.image }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ matrix.image }}:${{ matrix.version }}-${{ matrix.variation }}
            ${{ matrix.image }}:${{ matrix.variation }}
      -
        name: Swap cache path
        run: |
          rm -rf /tmp/.buildx
          mv /tmp/.buildx-new /tmp/.buildx

  ##############################################################################
  # Base PHP Webservers (Apache or Nginx)
  ##############################################################################

  php-web:
    needs: php-fpm
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        variation:
          - fpm-apache
          - fpm-nginx
        image:
          - shinsenter/php
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Restore cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Create cache path
        run: |
          mkdir -p /tmp/.buildx
          docker buildx create --use
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx
          cache-to: type=local,dest=/tmp/.buildx-new,mode=max
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:src/php/${{ matrix.variation }}/"
          build-args: |
            BASE_IMAGE=${{ matrix.image }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ matrix.image }}:${{ matrix.version }}-${{ matrix.variation }}
            ${{ matrix.image }}:${{ matrix.variation }}
      -
        name: Swap cache path
        run: |
          rm -rf /tmp/.buildx
          mv /tmp/.buildx-new /tmp/.buildx

  ##############################################################################
  # PHP-Based Popular Web Applications
  ##############################################################################

  php-webapps:
    needs: php-web
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        app:
          - laravel
          - wordpress
          - phpmyadmin
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Restore cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Create cache path
        run: |
          mkdir -p /tmp/.buildx
          docker buildx create --use
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.buildx
          cache-to: type=local,dest=/tmp/.buildx-new,mode=max
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:src/webapps/${{ matrix.app }}/"
          build-args: |
            BASE_IMAGE=shinsenter/php
            PHP_VERSION=${{ matrix.version }}
          tags: |
            shinsenter/${{ matrix.app }}:php${{ matrix.version }}
            shinsenter/${{ matrix.app }}:latest
      -
        name: Swap cache path
        run: |
          rm -rf /tmp/.buildx
          mv /tmp/.buildx-new /tmp/.buildx

################################################################################
################################################################################
